<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cezary Tworzewski</title>
  
  <subtitle>Learning Front-end</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://cezarytworzewski.github.io/"/>
  <updated>2018-07-01T17:46:21.804Z</updated>
  <id>https://cezarytworzewski.github.io/</id>
  
  <author>
    <name>Cezary Tworzewski</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Tworzenie łatwego paska postępu w Bootstrap</title>
    <link href="https://cezarytworzewski.github.io/2018/07/01/latwy-pasek-postepu-w-bootstrap/"/>
    <id>https://cezarytworzewski.github.io/2018/07/01/latwy-pasek-postepu-w-bootstrap/</id>
    <published>2018-07-01T15:01:18.000Z</published>
    <updated>2018-07-01T17:46:21.804Z</updated>
    
    <content type="html"><![CDATA[<p>Ostatnio uczę się intensywnie <code>Bootstrap&#39;a</code>.</p><p>Pominąłem opisanie jak stworzyć fajny przycisk w Bootstrap za pomocą klasy <code>.btn</code>.<br>Dość ciekawą rzeczą jest stworzenie prostego paska postępu, który można<br>zastosować podczas tworzenia strony, coś co określam terminem<br><code>strona w budowie</code>.</p><h2 id="Jak-to-wyglada"><a href="#Jak-to-wyglada" class="headerlink" title="Jak to wygląda?"></a>Jak to wygląda?</h2><p> Pasek postępu wygląda następująco:</p><p><img src="https://image.ibb.co/eLjjNJ/pasek_post_pu.png" alt="Pasek postępu"> </p><h2 id="Jak-to-zrobic"><a href="#Jak-to-zrobic" class="headerlink" title="Jak to zrobić?"></a>Jak to zrobić?</h2><p>Tworzymy sobie klasę główną dla naszego paska. Musimy stworzyć klasę<br>zewnętrzną, która będzie przechowywać nasz pasek postępu:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"progress"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>To właśnie w powyższym kodzie określimy jak będzie wyglądał nasz pasek. Teraz<br> musimy stworzyć - do stworzenia paska służy prosta klasa Bootstrap’a o<br> nazwie <code>progress-bar</code>. Kod wygląda następująco:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;progress&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;progress-bar bg-success w-75&quot;&gt;75%&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>Efekt od strony Front-end’u wygląda tak:</p><p><img src="https://image.ibb.co/d2oppy/pasek_post_pu_2.png" alt="Pasek postępu 2"></p><p>Podstawowa klasa <code>progress-bar</code> tworzy pasek postępu koloru szarego, kolor ten<br>jest widoczny po prawej stronie powyższego obrazka. Pasek postępu jest koloru<br>zielonego - nie jest to domyślna wartość. Jest zielony ponieważ dodałem<br>również klasę o nazwie <figure class="highlight plain"><figcaption><span>czyli tło zielone; `bg` -  to </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">inaczej `background-color` określana jako właściwość w CSS.</span><br><span class="line"></span><br><span class="line">Warto również wspomnieć o kolejnej klasie jakiej użyłem, czyli klasa `w-75`. </span><br><span class="line">W Bootstrap&apos;ie jest coś takiego jak &lt;strong&gt;rozmiar okna&lt;/strong&gt;.  Są dwa </span><br><span class="line">parametry odpowiadające za rozmiar: &lt;strong&gt;w - x&lt;/strong&gt; (`w` - </span><br><span class="line">szerokość; `x` - wartość liczbowa) oraz &lt;strong&gt;h - x&lt;/strong&gt; </span><br><span class="line">(`h` - wysokość; `x` - wartość liczbowa).</span><br><span class="line"></span><br><span class="line">Wyróżniamy następujące wartości liczbowe: &lt;strong&gt;25, 50, 75, 100&lt;/strong&gt;. </span><br><span class="line">Wartości te są wyrażone w procentach i jest ich tylko cztery.</span><br><span class="line"></span><br><span class="line">Na przykład wartość:</span><br><span class="line"></span><br><span class="line">`h-25` - określa wysokość na 25% wartości danego okna.</span><br><span class="line">`w-75` - określa szerokość okna o wartości 75% danego okna. W moim przypadku,</span><br><span class="line"> chciałem nadać tło na 75% danego okna, czyli okna `progress-bar`.</span><br><span class="line"></span><br><span class="line">Kolejna klasa warta uwagi to ```progress-bar-striped```. Nadaje ona wzorek z</span><br><span class="line"> pasków, u mnie będzie to kolor naprzemienny, raz jasnozielony a raz </span><br><span class="line"> ciemnozielony. </span><br><span class="line"> </span><br><span class="line"> Wygląda to tak:</span><br><span class="line"> </span><br><span class="line"> ![Pasek progress-bar-striped](https://image.ibb.co/ftz7bd/pasek_post_pu_wzorek.png)</span><br><span class="line"> </span><br><span class="line">Ostatnią najfajniejszą według mnie jest klasa `progress-bar-animated`. </span><br><span class="line">Tworzy ona niemal identyczny pasek jak w klasie `progress-bar-striped`, z</span><br><span class="line">tym, że pasek jest ruchomy. Posiada on efekt przesuwania się paska od prawej</span><br><span class="line">do lewej strony.</span><br></pre></td></tr></table></figure></p><p><div class="progress"><br>    <div class="progress-bar bg-success w-75 progress-bar-striped progress-bar-animated"><br>    </div><br></div><br><code>`</code></p><p>Żeby działał klasa <code>progress-bar-animated</code> musi być najpierw zdefiniowana<br>klasa <code>progress-bar-striped</code>.</p><p>Nie jestem ekspertem w Bootstrap (mam nadzieję, że jeszcze), ale podoba mi<br>się możliwość tworzenia w nim stron internetowych. Podstawą na pewno jest dla<br>mnie, że konieczne jest zrozumienie <code>Grida</code> jak to jest z tymi kolumnami.<br>Reszta to już zapamiętanie kilku klas, dzięki którym możemy zrobić ciekawą<br>stronkę.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ostatnio uczę się intensywnie &lt;code&gt;Bootstrap&amp;#39;a&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Pominąłem opisanie jak stworzyć fajny przycisk w Bootstrap za pomocą k
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Czego oczekują firmy - nauka</title>
    <link href="https://cezarytworzewski.github.io/2018/06/21/dostosowanie-umiejetnosci-pod-rekrutacje/"/>
    <id>https://cezarytworzewski.github.io/2018/06/21/dostosowanie-umiejetnosci-pod-rekrutacje/</id>
    <published>2018-06-21T17:48:09.000Z</published>
    <updated>2018-06-21T18:04:21.134Z</updated>
    
    <content type="html"><![CDATA[<p>Przeglądam oferty z pracą dla ludzi na stanowisko Front-end Developera,<br>skupiam się jedynie wymogami dla <strong>JUNIORA</strong>. Jedne wymagają dobrej<br>znajomości JavaScript’u, inne zaś REACT’a.</p><p>No ale podobno junior musi coś wiedzieć, a przecież się nauczy w pracy.<br>Zazwyczaj JUNIORZY mają swojego opiekuna w firmie, który między innymi ich uczy.</p><p>W mojej okolicy jest ogłoszenie. Wymogi to:</p><ul><li>podstawowa znajomość <strong>PHP, HTML, CSS, JS</strong></li><li>znajomość <strong>MS SQL, MySQL</strong></li><li>mile widziane to:<ul><li>znajomość framework Laravel, Symfony i Zend oraz podstawy Linux’a.</li></ul></li></ul><p>Dzisiaj rozmawiając z przyjaciółką powiedziała mi coś takiego: <mark>Trzeba<br>przeglądać oferty i patrzeć czego firmy oczekują a potem się tego uczyć</mark></p><p>Oczywiście, niby wymogi nie są duże, ale PHP, SQL nie znam. Nie mówiąc już o<br>samym Laravel’u. A co gorsze to JavaScript - który jest… dobra nie będę<br>narzekał na niego :)</p><p>Pomyślałem, kurcze… fajnie, ogłoszenie nie jest jakoś wygórowane. A tym<br>samym szybko przeglądam podstawy <strong>języka SQL</strong>. Uczę się stąd:  <a href="https://www.flynerd.pl/2018/05/naucz-sie-sql-w-60min-kurs-podstawy.html" target="_blank" rel="noopener">https://www.flynerd.pl/2018/05/naucz-sie-sql-w-60min-kurs-podstawy.html</a></p><p>Czy uważacie, że jeśli chciałbym aplikować na to stanowisko to ten kurs jest<br>wart uwagi?</p><p>Co do PHP to też go nie znam - niestety, albo <em>jeszcze nie znam</em>. Czy jest<br>Waszym zdaniem realna szansa, że się skontaktują ze mną?</p><p>Jak napisać dobre CV? Nie chce korzystać z gotowych wzorów jakie są na<br>stronie <a href="http://www.pracuj.pl" target="_blank" rel="noopener">http://www.pracuj.pl</a>. Niestety do CV nie mam za dużo co wpisać.</p><p>Czy warto wpisywać rzeczy, które aktualnie sie uczę albo zaczynam dopiero?</p><p>Dajcie znać w komentarzach :)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Przeglądam oferty z pracą dla ludzi na stanowisko Front-end Developera,&lt;br&gt;skupiam się jedynie wymogami dla &lt;strong&gt;JUNIORA&lt;/strong&gt;. Jed
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Na razie Bootstrap</title>
    <link href="https://cezarytworzewski.github.io/2018/06/20/bootstrap-nauka/"/>
    <id>https://cezarytworzewski.github.io/2018/06/20/bootstrap-nauka/</id>
    <published>2018-06-20T21:43:51.000Z</published>
    <updated>2018-06-20T22:09:01.495Z</updated>
    
    <content type="html"><![CDATA[<p>Chciałem się z Wami podzielić pewną nowiną - informacją. Sam już nie wiem.<br>Chodzi oto, że ostatnio miałem 4-dniowy maraton programistyczny -<br>wspominałem Wam o nim jakiś czas temu.</p><p>Zacząłem tworzyć stronkę z użyciem framework’a <em>Bootstrap</em>. Na początku<br>wszystko popsułem, tzn. zaimplementowałem (dołączyłem bibliotekę) go w<br>kodzie HTML, ale style do strony pisałem ręcznie - co było wielkim błędem,<br>ponieważ w ogóle nie wykorzystywałem gotowych <em>klas Bootstrap’a</em>.</p><p>Teraz zapoznaje się z dokumentacją Bootstrap’a, oglądam tutoriale na<br><code>YouTube</code>. Tworzę strony - jednocześnie oglądając i kodując. Poznaje<br>poszczególne klasy do czego służą etc.</p><p>Nie jest on wcale taki straszny - stwierdzam, że jest nawet całkiem<br>przyjazny :) </p><p>Wiem, że przede mną mnóstwo trudności - ale <code>&#39;Tanio skóry nie sprzedam&#39;</code>.</p><p>Tutoriale oglądam po angielsku - bardziej muszę zdać się na instynkt,<br>ponieważ nie jestem w nim za dobry. Wolałbym jakiś polski tutorial, a na YT<br>nie ma tego za wiele. Sporo jest próbek do płatnych kursów.</p><p>Także przez najbliższe dni koduję w Bootstrap’ie. Planuję dokończyć stronę,<br>którą zacząłem i zrobić jeszcze około dwie stronki, tak aby się z nim oswoić.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Chciałem się z Wami podzielić pewną nowiną - informacją. Sam już nie wiem.&lt;br&gt;Chodzi oto, że ostatnio miałem 4-dniowy maraton programisty
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jak łatwiej tworzyć artykuły na bloga z Hexo?</title>
    <link href="https://cezarytworzewski.github.io/2018/06/16/jak-dodac-artykul-na-bloga-hexo/"/>
    <id>https://cezarytworzewski.github.io/2018/06/16/jak-dodac-artykul-na-bloga-hexo/</id>
    <published>2018-06-15T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.671Z</updated>
    
    <content type="html"><![CDATA[<p>Odnalazłem nowy sposób na tworzenie artykułów  w oparciu o <strong>Hexo</strong>.</p><p>Do tej pory utrudniałem sobie pracę podczas tworzenia artykułów.<br>Tworzyłem nowy plik, pisałem artykuł a później dodawałem go z użyciem<br>programu <code>git</code>. Dodawanie artykułów trwało o wiele dłużej, gdyż musiałem<br>wydawać kolejno polecenia:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"Initial post"</span></span><br><span class="line">git push</span><br><span class="line">hexo clean</span><br><span class="line">hexo deploy</span><br><span class="line">gh-pages -d public/</span><br></pre></td></tr></table></figure><p>Teraz wystarczy, że wydam tylko 3 polecenia, które są opisanie poniżej. Na<br>szczęście udało mi się znaleźć sposób jak łatwiej dodać artykuł.</p><h2 id="💡-Wskazowka"><a href="#💡-Wskazowka" class="headerlink" title="💡 Wskazówka"></a>💡 Wskazówka</h2><p>Ostatnie 3 polecenia możesz wykonać jednym:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run deploy</span><br></pre></td></tr></table></figure><p>jeśli zdefiniujesz w pliku <code>package.json</code> nowe zadanie:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">    "deploy": "hexo clean &amp;&amp; hexo generate &amp;&amp; gh-pages -d public/"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Tworzenie-artykulow-w-aplikacji-zbudowanej-w-oparciu-o-Hexo"><a href="#Tworzenie-artykulow-w-aplikacji-zbudowanej-w-oparciu-o-Hexo" class="headerlink" title="Tworzenie artykułów (w aplikacji zbudowanej w oparciu o Hexo)"></a>Tworzenie artykułów (w aplikacji zbudowanej w oparciu o Hexo)</h2><ol><li><p>Jestem w katalogu projektu, moja ścieżka wygląda tak:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cezary:~/blog$</span><br></pre></td></tr></table></figure></li><li><p>Teraz żeby dodać nowy artykuł muszę wydać w katalogu projektu polecenie:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new MOJ_NOWY_POST</span><br></pre></td></tr></table></figure><p> Stworzy mi się automatycznie plik o nazwie <code>MOJ-NOWY-POST.md</code>.<br> Rozszerzenie <code>md</code> jest również dodawane automatycznie do pliku.</p><p> Skąd wiem, że plik się poprawnie dodał? Otóż po wydaniu wcześniejszego<br> polecenia otrzymam komunikat - informację o dodaniu poprawnie pliku.</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~/blog/source/_posts/MOJ-NOWY-POST.md</span><br></pre></td></tr></table></figure></li><li><p>Następnie edytuję plik <code>MOJ-NOWY-POST.md</code> dodając w nim treść artykułu.<br> Zapisuję go i przechodzę dalej.</p></li><li><p>Wydam kolejno polecenia:</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">gh-pages -d public/</span><br></pre></td></tr></table></figure></li></ol><p><mark>Artykuł właśnie został dodany i opublikowany!</mark> 🚀</p><h2 id="Tworzenie-artykulow-roboczych-draft"><a href="#Tworzenie-artykulow-roboczych-draft" class="headerlink" title="Tworzenie artykułów roboczych (draft)"></a>Tworzenie artykułów roboczych (<code>draft</code>)</h2><p>Możesz napisać kilka artykułów ale w wersji roboczej. Załóżmy, że napisałeś<br>artykuł, ale chcesz opublikować go jutro. Z Hexo masz taką możliwość.</p><p>Jak tworzyć artykuł w wersji roboczej:</p><ul><li><p>będąc w głównym katalogu mojego bloga wydaję polecenie:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft PLIK_ROBOCZY</span><br></pre></td></tr></table></figure><p>  Informację o poprawnym dodaniu pliku roboczego znajdziesz poniżej:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~/blog/source/_drafts/PLIK-ROBOCZY.md</span><br></pre></td></tr></table></figure><p>  Zapewne zauważyłeś, że w katalogu projektu, dodał się nowy folder o nazwie:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source/_drafts</span><br></pre></td></tr></table></figure></li><li><p>jeśli już edytowałeś swój plik roboczy, teraz pora żeby go opublikować</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish PLIK_ROBOCZY</span><br></pre></td></tr></table></figure><p>  Potwierdzeniem poprawnego opublikowania jest otrzymanie komunikatu:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Published: ~/blog/source/_posts/PLIK-ROBOCZY.md</span><br></pre></td></tr></table></figure></li></ul><p><mark>Twój szkic został zamieniony na artykuł!</mark> 🚀</p><p><em>Wszystkie</em> operacje musisz wykonywać będąc w <em>głównym</em> katalogu projektu.</p><p><em>Good luck!</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Odnalazłem nowy sposób na tworzenie artykułów  w oparciu o &lt;strong&gt;Hexo&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Do tej pory utrudniałem sobie pracę podczas twor
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Dlaczego nie można modyfikować pliku bootstrap.min.css?</title>
    <link href="https://cezarytworzewski.github.io/2018/06/15/dlaczego-nie-mozna-modyfikowac-pliku-bootstrapmincss/"/>
    <id>https://cezarytworzewski.github.io/2018/06/15/dlaczego-nie-mozna-modyfikowac-pliku-bootstrapmincss/</id>
    <published>2018-06-14T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.671Z</updated>
    
    <content type="html"><![CDATA[<p>Czym jest <strong>Bootstrap</strong>? Bootstrap jest to framework. Służy on do tworzenia<br>stron internetowych w sposób <em>responsywny</em>, czyli taki, gdzie strona będzie<br>się dostosowywać do każdego urządzenia, nie zależnie od wielkości przeglądarki.</p><p>Framework ten można pobrać lokalnie na swój komputer lub z serwera:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Dlaczego-nie-powinnismy-go-modyfikowac"><a href="#Dlaczego-nie-powinnismy-go-modyfikowac" class="headerlink" title="Dlaczego nie powinniśmy go modyfikować?"></a>Dlaczego nie powinniśmy go modyfikować?</h2><p>Chodzi oto, że Bootstrap posiada szereg <em>domyślnie</em> stworzonych elementów,<br>które w sposób “automatyczny” dadzą nam wizualnie świetną stronę internetową.</p><p>Więc, posiada on edytowane już selektory, które możemy zostawić<br>i strona będzie nam się dobrze prezentować.</p><p>Jeśli chcemy zmodyfikować, to robimy to inaczej. Tworzymy <em>nowy</em> plik<br><code>style.css</code> i modyfikujemy dane selektory. Nadpisujemy je.</p><p>Wyobraź sobie, że Bootstrap posiada już stworzony selektor <code>h1</code>, którego<br>nie musimy edytować, ale jednak załóżmy, że chcemy zmienić <code>font-size</code> na<br><code>30px</code>, gdzie domyślnie ta wartość wynosi przykładowo <code>18px</code>.</p><p>Ponadto, nie powinniśmy edytować tego pliku, ponieważ został on poddany<br>procesowi <strong>minifikacji kodu</strong>, o którym mówi mój kolega w swoim <code>vlog&#39;u</code>:</p><iframe width="560" height="315" src="https://www.youtube.com/embed/8Mhvn2jImwI" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><p><em>Minifikacja kodu</em> jest to usunięcie w całym pliku białych znaków.</p><p>Plik, który został poddany minifikacji kodu, byłby - a dokładniej jest trudny<br>do edycji. Jest on nieczytelny, więc edycja go zajęła by nam “setki godzin”.</p><p>Innym powodem według mnie dlaczego nie powinniśmy go edytować, to taka sytuacja<br>gdzie, tą bibliotekę, będziemy chcieli wykorzystać w innym projekcie i od nowa<br>musielibyśmy dostosowywać właściwości CSS naszej strony. Dlatego jak wspomniałem<br>wcześniej - najlepiej jak stworzymy drugi plik.</p><p>Albo jeśli edytujemy, to nie powinniśmy sie łudzić, że zostanie ona update’owana<br>przez twórców Twitter’a. Musielibyśmy wprowadzić na prawdę bardzo dobre<br><em>nowe</em> funkcjonalności we framework’u.</p><p>To się tyczy nie tylko Bootstrap’a, a także <em>innych</em> framework’ów.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Czym jest &lt;strong&gt;Bootstrap&lt;/strong&gt;? Bootstrap jest to framework. Służy on do tworzenia&lt;br&gt;stron internetowych w sposób &lt;em&gt;responsywny&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Czym się różni reguła od właściwości w CSS?</title>
    <link href="https://cezarytworzewski.github.io/2018/06/15/regula-wlasciwosc/"/>
    <id>https://cezarytworzewski.github.io/2018/06/15/regula-wlasciwosc/</id>
    <published>2018-06-14T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.675Z</updated>
    
    <content type="html"><![CDATA[<p>Pod lupę wezmę teraz <code>CSS</code>. Opowiem o tym, czym jest właściwość a czym<br>reguła w CSS.</p><h2 id="Co-to-jest-regula-CSS"><a href="#Co-to-jest-regula-CSS" class="headerlink" title="Co to jest reguła CSS?"></a>Co to jest reguła CSS?</h2><p>Dzięki regułą CSS, możemy stworzyć wygląd, tak jakbyśmy chcieli aby nasza<br>strona wyglądała dla jednego, bądź wielu elementów.</p><p>Reguła CSS określa <strong>wygląd</strong> dla elementu HTML.</p><h3 id="Skladnia-reguly"><a href="#Skladnia-reguly" class="headerlink" title="Składnia reguły"></a>Składnia reguły</h3><p>Reguła CSS składa się z:</p><ul><li>selektora - selektor jest elementem HTML, który chcemy edytować, może<br>  to być element zdefiniowany jako klasa, wygląda to mniej więcej tak:<br>  Elementowi <code>h3</code> nadaję klasę: <code>&lt;h3 class=&quot;size-title&quot;&gt;&lt;/h3&gt;</code>.</li><li>nawiasu klamrowego {} - w danym nawiasie umieszczamy swoje parametry.<br>  Umieszczamy swoje operacje, czyli operacje, które będą coś zmieniać<br>  na mojej stronie od strony warstwy prezentacji</li><li>właściwość - za ich pomocą określamy, co chcemy zmienić w naszej stronie<br>  internetowej, określamy jaki element HTML chcemy zmienić.<br>  Chcemy np. zmienić tło naszej strony internetowej. Za tło odpowiada<br>  właściwość <code>background-color</code></li><li>wartość - za pomocą wartości, określamy jak chcemy zmienić element, czy<br>  nadamy mu kolor czerwony.</li></ul><h4 id="Prosty-przepis-na-stworzenie-reguly-CSS"><a href="#Prosty-przepis-na-stworzenie-reguly-CSS" class="headerlink" title="Prosty przepis na stworzenie reguły CSS"></a>Prosty przepis na stworzenie reguły CSS</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">selektor</span> &#123;</span><br><span class="line">    właściwość: wartość;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>czyli, chce zmienić element <code>h3</code>, nadać mu wielkość czcionki o rozmiarze<br>25px. Gdzie moją <strong>właściwością</strong> jest <em>wielkość czcionki</em>:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Wyobraź sobie, że przed Tobą znajduje się stos białych, czystych kartek,<br>a Twoim zadaniem jest pokolorowanie każdej z nich. Dodatkowo każdą<br>kartkę koloru czerwonego musisz przeciąć na pół. Pierwsza czynność,<br>czyli pokolorowanie kartek, oczywiście nie jest niczym trudnym.<br>Druga czynność, czyli przecięcie na pół kartek koloru czerwonego,<br>wymaga od Ciebie odszukania danej kartki, czyli selekcji spośród danej<br>grupy kartek.</p><p>no więc:</p><ul><li><strong>regułą</strong> - są tutaj kartki papieru,</li><li><strong>właściwością</strong> - jest tu informacja, że chcemy pokolorować, czyli<br>  właściwość <em>color</em></li><li><strong>wartość</strong> - to już jest określony kolor, np. czerwony, zielony</li></ul><p>Dlatego właściwość CSS, zawiera się w regule CSS, jest czymś podrzędnym,<br>bez czego selektor (reguła) CSS nie będzie działać.</p><p>Właściwości są niezbędne do poprawnego działania <em>reguły CSS</em>.</p><p>Mam nadzieję, że nie co przybliżyłem Wam różnicę pomiędzy <em>regułą</em><br>a <em>właściwością</em> CSS.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Pod lupę wezmę teraz &lt;code&gt;CSS&lt;/code&gt;. Opowiem o tym, czym jest właściwość a czym&lt;br&gt;reguła w CSS.&lt;/p&gt;
&lt;h2 id=&quot;Co-to-jest-regula-CSS&quot;&gt;&lt;a 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Porównanie znaczników &quot;q, cite, blockquote&quot;.</title>
    <link href="https://cezarytworzewski.github.io/2018/06/15/porownanie-znacznikow-q-cite-blockquote/"/>
    <id>https://cezarytworzewski.github.io/2018/06/15/porownanie-znacznikow-q-cite-blockquote/</id>
    <published>2018-06-14T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.675Z</updated>
    
    <content type="html"><![CDATA[<p>Postaram się teraz zrozumieć co łączy znaczniki <code>q</code>, <code>cite</code> oraz <code>blockquote</code>.</p><p>Jedyne co ich <em>łączy</em> to to, że wszystkie służą do <strong>CYTOWANIA</strong>.</p><p>Ale pamiętajmy możemy cytować zdanie, kogoś, wiersz fragment z książki ale który<br>będzie odpowiedni w danym kontekście? Dlatego zacznę od znacznika <code>q</code>.</p><p>Znaczniki <code>q</code>, <code>cite</code> &amp; <code>blockquote</code>:</p><ul><li><p>znacznik <strong>q</strong> - służy co cytowania krótszej wypowiedzi. Może być cytowane<br>  zdanie wypowiedziane przez kogoś np.</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    Programiści powiadają, że <span class="tag">&lt;<span class="name">q</span>&gt;</span>Każdy może nauczyć się programowania<span class="tag">&lt;/<span class="name">q</span>&gt;</span>.</span><br><span class="line">    Zgadzam się z tym</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  lub</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        Pani powiedziała, że <span class="tag">&lt;<span class="name">q</span>&gt;</span>Dopilnuję, żeby nikt z Was nie zdał matury<span class="tag">&lt;/<span class="name">q</span>&gt;</span>.</span><br><span class="line">        Nie powinna tak mówić.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">* znacznik **cite** - również służy do cytowania, ale cytowania w których</span><br><span class="line">    odwołujemy się do innych źródeł. Mogą to być odwołania do pracy twórczej</span><br><span class="line">    różnych autorów książek, profesorów, poetów np.</span><br><span class="line"></span><br><span class="line">    ```html</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        Prawdą jest to, że <span class="tag">&lt;<span class="name">cite</span>&gt;</span>Adam Mickiewicz<span class="tag">&lt;/<span class="name">cite</span>&gt;</span> wers</span><br><span class="line">        <span class="tag">&lt;<span class="name">q</span>&gt;</span>Litwo, Ojczyzno moja! ty jesteś jak zdrowie;<span class="tag">&lt;/<span class="name">q</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>znacznik <strong>blockquote</strong> - za pomocą tego znacznika zacytujemy dłuższy<br>  fragment tekstu, może to być artykuł z gazety, wiersz np.</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">Litwo, Ojczyzno moja! ty jesteś jak zdrowie;</span><br><span class="line">Ile cię trzeba cenić, ten tylko się dowie,</span><br><span class="line">Kto cię stracił. Dziś piękność twą w całej ozdobie</span><br><span class="line">Widzę i opisuję, bo tęsknię po tobie.</span><br><span class="line">Panno święta, co Jasnej bronisz Częstochowy</span><br><span class="line">I w Ostrej świecisz Bramie! Ty, co gród zamkowy</span><br><span class="line">Nowogródzki ochraniasz z jego wiernym ludem!</span><br><span class="line">Jak mnie dziecko do zdrowia powróciłaś cudem</span><br><span class="line">(— Gdy od płaczącej matki, pod Twoją opiekę</span><br><span class="line">Ofiarowany martwą podniosłem powiekę;</span><br><span class="line">I zaraz mogłem pieszo, do Twych świątyń progu</span><br><span class="line">Iść za wrócone życie podziękować Bogu —)</span><br><span class="line">Tak nas powrócisz cudem na Ojczyzny łono!...</span><br><span class="line">Tymczasem, przenoś moją duszę utęsknioną</span><br><span class="line">Do tych pagórków leśnych, do tych łąk zielonych,</span><br><span class="line">Szeroko nad błękitnym Niemnem rozciągnionych;</span><br><span class="line">Do tych pól malowanych zbożem rozmaitem,</span><br><span class="line">Wyzłacanych pszenicą, posrebrzanych żytem;</span><br><span class="line">Gdzie bursztynowy świerzop, gryka jak śnieg biała,</span><br><span class="line">Gdzie panieńskim rumieńcem dzięcielina pała,</span><br><span class="line">A wszystko przepasane jakby wstęgą, miedzą</span><br><span class="line">Zieloną, na niej zrzadka ciche grusze siedzą.</span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  czego wynikiem będzie:</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">    Litwo, Ojczyzno moja! ty jesteś jak zdrowie;</span><br><span class="line">    Ile cię trzeba cenić, ten tylko się dowie,</span><br><span class="line">    Kto cię stracił. Dziś piękność twą w całej ozdobie</span><br><span class="line">    Widzę i opisuję, bo tęsknię po tobie.</span><br><span class="line">    Panno święta, co Jasnej bronisz Częstochowy</span><br><span class="line">    I w Ostrej świecisz Bramie! Ty, co gród zamkowy</span><br><span class="line">    Nowogródzki ochraniasz z jego wiernym ludem!</span><br><span class="line">    Jak mnie dziecko do zdrowia powróciłaś cudem</span><br><span class="line">    (— Gdy od płaczącej matki, pod Twoją opiekę</span><br><span class="line">    Ofiarowany martwą podniosłem powiekę;</span><br><span class="line">    I zaraz mogłem pieszo, do Twych świątyń progu</span><br><span class="line">    Iść za wrócone życie podziękować Bogu —)</span><br><span class="line">    Tak nas powrócisz cudem na Ojczyzny łono!...</span><br><span class="line">    Tymczasem, przenoś moją duszę utęsknioną</span><br><span class="line">    Do tych pagórków leśnych, do tych łąk zielonych,</span><br><span class="line">    Szeroko nad błękitnym Niemnem rozciągnionych;</span><br><span class="line">    Do tych pól malowanych zbożem rozmaitem,</span><br><span class="line">    Wyzłacanych pszenicą, posrebrzanych żytem;</span><br><span class="line">    Gdzie bursztynowy świerzop, gryka jak śnieg biała,</span><br><span class="line">    Gdzie panieńskim rumieńcem dzięcielina pała,</span><br><span class="line">    A wszystko przepasane jakby wstęgą, miedzą</span><br><span class="line">    Zieloną, na niej zrzadka ciche grusze siedzą.</span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Dlatego myślę, że wiem już w jakim kontekście powinienem stosować<br>powyższe znaczniki. Ale zdaję sobie sprawę, że zanim w pełni zacznę<br>poprawnie stosować je to minie troszeczkę czasu.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Postaram się teraz zrozumieć co łączy znaczniki &lt;code&gt;q&lt;/code&gt;, &lt;code&gt;cite&lt;/code&gt; oraz &lt;code&gt;blockquote&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Jedyne co ich &lt;em&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jaka jest różnica pomiędzy znacznikiem img &amp; background-image?</title>
    <link href="https://cezarytworzewski.github.io/2018/06/14/img-vs-background-image/"/>
    <id>https://cezarytworzewski.github.io/2018/06/14/img-vs-background-image/</id>
    <published>2018-06-13T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.671Z</updated>
    
    <content type="html"><![CDATA[<p>Wszystko zaczęło się od <em>chęci</em> umieszczenia baneru na stronie www.<br>Tylko jak to poprawnie zrobić?</p><h2 id="Znacznik-img"><a href="#Znacznik-img" class="headerlink" title="Znacznik img"></a>Znacznik <code>img</code></h2><p>Znacznik <code>img</code> służy do dodawania  pliku graficznego do naszej strony<br>internetowej. Jest to znacznik samozamykający.<br><strong>Nie robimy czegoś takiego jak <code>&lt;/img&gt;</code></strong></p><p>Znacznik ten posiada również atrybuty:</p><ul><li>najważniejszy to atrybut <code>src</code> - gdzie pomiędzy cudzysłowy dodajemy<br>  ścieżkę do naszego obrazka,</li><li>kolejny atrybut to <code>alt</code> - atrybut ten posiada alternatywny tekst<br>  dla naszego obrazka. Jeśli podamy złą ścieżkę do obrazka to wyświetli<br>  nam się <strong>tekst alternatywny</strong>,<br>  Atrybut <code>alt</code> możemy jeszcze spotkać w sytuacji, jeśli usuniemy nasz<br>  obrazek z serwera, a strona dalej będzie istnieć i odwoływać się do<br>  ścieżki na serwerze (oczywiście, tego obrazka już nie ma),</li><li>atrybut <code>title</code> - jeśli najedziemy kursorem myszy na zdjęcie to<br>  pojawi się tekst obrazka</li><li><p>kolejne atrybuty to <code>height</code> oraz <code>width</code>:</p><ul><li><code>height</code> - wysokość grafiki</li><li><code>width</code> - szerokość grafiki</li></ul><p>Służą one do zmiany rozmiarów wyświetlającego obrazek.</p></li><li><p>jeszcze inny atrybut to <code>align</code> - służy do wyrównywania obrazków w<br>  poziomie.</p><ul><li><p>Atrybut <code>align</code> posiada dwie wartości:</p><ul><li><code>left</code></li><li><code>right</code></li></ul></li></ul></li></ul><p>Przykładowy kod z użyciem znacznika <code>img</code>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/images/computer.jpg"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://piecioshka.pl/assets/images/posts/post-banner-hexo-setup-blog.png"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Regula-background-image"><a href="#Regula-background-image" class="headerlink" title="Reguła background-image"></a>Reguła <code>background-image</code></h2><p>Reguła, ta ustawia obrazek tła dla elementu.</p><p>Wygląda to tak: <code>background-image: url(ścieżka-do-obrazka)</code></p><p>Mamy stworzony kod <code>HTML</code>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>W pliku np. <code>style/main.css</code> odwołujemy się do reguły <code>background-image</code><br>po to, aby dodać nasz długo oczekiwany baner:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">"../images/baner-biblioteka.jpg"</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">421px</span>;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Wszystko-ladnie-pieknie-ale-kiedy-stosowac-jedno-albo-drugie"><a href="#Wszystko-ladnie-pieknie-ale-kiedy-stosowac-jedno-albo-drugie" class="headerlink" title="Wszystko ładnie, pięknie - ale kiedy stosować jedno albo drugie?"></a>Wszystko ładnie, pięknie - ale kiedy stosować jedno albo drugie?</h3><p>Podchodząc do tworzenia projektu trzeba najpierw się zastanowić nad tym,<br>czy dane tło ma być takie samo na wszystkich podstronach czy nie.<br><strong>Musimy wiedzieć dlaczego chcemy użyć tej właściwości</strong></p><p>Jeśli dodamy plik za pomocą <code>CSS</code> to muszę pamiętać, że:</p><ul><li>będę mógł zmienić tryb wyświetlania w <code>background-image</code>, czyli ustawić<br>  <code>position</code> albo <code>repeat</code> lub <code>no-repat</code></li><li>jeśli nie planuję zmieniać baneru (grafiki) na stronie powinienem użyć<br>  <code>background-image</code></li><li>nie będę mógł zapisać grafiki jeśli kliknę prawym przyciskiem myszy</li><li>nie będę mógł zaznaczyć obrazka</li></ul><p>Jeśli dodam plik za pomocą znacznika <code>img</code> to muszę pamiętać, że:</p><ul><li>mogę zapisać obrazek za pomocą prawego przycisku myszy</li><li>mogę zaznaczyć obrazek</li><li>obrazek mogę dodać do każdej podstrony osobno, a później będę mógł w<br>  bardzo łatwy sposób podmienić grafikę gdzie chcemy</li></ul><h2 id="Definicja-img-amp-backgroung-image"><a href="#Definicja-img-amp-backgroung-image" class="headerlink" title="Definicja img &amp; backgroung-image"></a>Definicja <code>img</code> &amp; <code>backgroung-image</code></h2><ul><li><code>img</code> - to skrót od <code>images</code> (ang. <em>obrazek</em>)</li><li><code>background</code> (ang. <em>tło</em>)</li><li><code>background-image</code> - mogę przetłumaczyć jako <code>tło obrazkowe</code></li></ul><p><code>img</code> służy do dodawania zdjęcia, obrazków, natomiast <code>background-image</code><br>służy do dodawania tła na stronie</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Wszystko zaczęło się od &lt;em&gt;chęci&lt;/em&gt; umieszczenia baneru na stronie www.&lt;br&gt;Tylko jak to poprawnie zrobić?&lt;/p&gt;
&lt;h2 id=&quot;Znacznik-img&quot;&gt;&lt;a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nauka JavaScript od podstaw (2)</title>
    <link href="https://cezarytworzewski.github.io/2018/06/13/podstawy-js-2/"/>
    <id>https://cezarytworzewski.github.io/2018/06/13/podstawy-js-2/</id>
    <published>2018-06-12T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.671Z</updated>
    
    <content type="html"><![CDATA[<p>Ogólnie rzecz biorąc, zaczynam od początku <strong>JavaScript</strong>, ale mnóstwo<br>rzeczy wiem - <em>tak czuję, albo wydaję mi się!</em></p><p>Dzisiaj skupie się na tekstowym typie danych <code>String</code>,<br>typie liczbowym <code>Number</code>, <code>true</code>, <code>false</code> i wartości<br><code>true</code> &amp; <code>false</code>. A dzisiejsza przygodę zakończę z <code>null</code> vs. <code>undefined</code>.</p><h2 id="Tekstowy-typ-danych-String"><a href="#Tekstowy-typ-danych-String" class="headerlink" title="Tekstowy typ danych String"></a>Tekstowy typ danych <code>String</code></h2><p>Warto powiedzieć, że tekstowy typ danych zapisujemy za pomocą apostrofów<br> <code>&#39; &#39;</code> albo cudzysłowów <code>&quot; &quot;</code>. Jest to obojętne jaką konwencje użyjemy,<br>ale zawsze powinniśmy stosować tylko jedną. Między innymi po to,<br>aby nasz kod był czytelny dla nas, ale również dla naszych kolegów po fachu.</p><p>Zadeklarujemy sobie zmienną <code>firstName</code>:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> firstName = <span class="string">'Jan'</span>;</span><br></pre></td></tr></table></figure><p>Stworzyliśmy właśnie zmienną <code>firstName</code> i przypisaliśmy do niej wartość <code>Jan</code>.</p><p>Żeby sprawdzić jaki typ danych ma nasza zmienna używamy to takich działań<br>operatora <code>typeof</code>.</p><p><code>typeof firstName</code> =&gt; Wynikiem jest: <strong><em>String</em></strong></p><p>Dlatego jeśli wartość naszej zmiennej posiada <code>&#39;  &#39;</code> albo <code>&quot;  &quot;</code> to wiem,<br>że jest to typ <strong><em>String</em></strong>.</p><p>Tekstowy typ danych to <em>String</em>.</p><h2 id="Przyklady"><a href="#Przyklady" class="headerlink" title="Przykłady"></a>Przykłady</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> firstName = <span class="string">'Jan'</span>;</span><br><span class="line"><span class="keyword">let</span> lastName = <span class="string">"Kowalski"</span>;</span><br></pre></td></tr></table></figure><p>Załóżmy, że mamy tytuł książki albo cytat. Zazwyczaj umieszczamy je w <code>&quot; &quot;</code>.<br>Jak to zrobić w JavaScript?</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> bookTitle = <span class="string">"Władca pierścieni"</span></span><br></pre></td></tr></table></figure><p>Wywołuję sobie to w konsoli przeglądarki. Wynik to:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bookTitle // wywołuję sobie zmienną</span><br><span class="line">&quot;Władca Pierścieni&quot; // jest to wynik, posiada cudzysłowy, ale są to cudzysłowy informujące, że wartośc jest String,</span><br></pre></td></tr></table></figure><p>Żeby zrobić cudzysłów określający tytuł książki to robię to tak:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> bookTitle = <span class="string">"'Władca Pierścieni'"</span>;</span><br></pre></td></tr></table></figure><p>albo:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> bookTitle = <span class="string">'"Władca Pierścieni"'</span>;</span><br></pre></td></tr></table></figure><p>inny sposób to:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> bookTitle = <span class="string">"\"Władca Pierścieni\""</span>;</span><br></pre></td></tr></table></figure><h2 id="Liczbowy-typ-danych-Number"><a href="#Liczbowy-typ-danych-Number" class="headerlink" title="Liczbowy typ danych Number"></a>Liczbowy typ danych Number</h2><p><strong>Number</strong> to liczbowy typ danych, dzięki nim możemy przechowywać liczby,<br>wartości liczbowe, liczby całkowite czy wartości zmiennoprzecinkowe.<br>Zapisujemy je troszkę inaczej niż <code>String</code> tzn. zapisujemy je bez użycia<br>cudzysłowów.</p><ul><li><p>liczba całkowita:</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> number = <span class="number">20</span>;</span><br></pre></td></tr></table></figure></li><li><p>liczba zmiennoprzecinkowa:</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> number = <span class="number">20.5</span>;</span><br></pre></td></tr></table></figure><p>  Do tworzenia liczb zmiennoprzecinkowych używamy <strong>kropki</strong>.</p></li></ul><p>W JavaScript mamy też zmienne (stałe), czyli <strong>Infinity</strong> i <strong>-Infinity</strong>:</p><ul><li><code>Infinity</code> =&gt; 1.797693134862315E+308</li><li><code>-Infinity</code> =&gt; 1.797693134862316E+308</li></ul><p>Posiadamy również taką wartość jak <code>NaN</code> (<em>Not a Number</em>):</p><ul><li>to nie jest wartość liczbowa, jest tylko skojarzona jako typ liczbowy</li><li>jeśli będziemy robić jakieś obliczenia, a wynikiem nie będzie nowa liczba,<br>  to zostanie zwrócona wartość <code>NaN</code>.</li></ul><h2 id="Prawda-falsz-wartosci-true-amp-false"><a href="#Prawda-falsz-wartosci-true-amp-false" class="headerlink" title="Prawda, fałsz, wartości true &amp; false"></a>Prawda, fałsz, wartości true &amp; false</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> isLoggedIn = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isLoggedIn) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Zalogowano'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Nie zalogowano'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>to jest bardzo istotna linia: <code>if (isLoggedIn)</code> w środku nawiasu<br><strong>zawsze</strong> jest prawda. To nie musi być zmienna <code>isLoggedIn</code>, może to<br>być dowolna inna zmienna. Zgodnie z wartością zmiennej <code>isLoggedIn</code><br>zmienna ta ma wartość <code>true</code>, później w <strong>instrukcji warunkowej</strong><br>sprawdzam czy <code>isLoggedIn</code> jest prawdziwe. Jeśli prawdziwe to wykonam<br>kod <code>console.log(&#39;Zalogowano&#39;);</code></p><h2 id="Wartosci-falszywe-to"><a href="#Wartosci-falszywe-to" class="headerlink" title="Wartości fałszywe to"></a>Wartości fałszywe to</h2><ul><li>false</li><li>0</li><li>“ “</li><li>null</li><li>undefined</li><li>NaN</li></ul><p>Przykład:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> value = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(value) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Ta wartość nie jest fałszywa'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Wartość jest fałszywa'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="null-vs-undefined"><a href="#null-vs-undefined" class="headerlink" title="null vs. undefined"></a>null vs. undefined</h2><p>Są to wartości fałszywe! - ale nie oto teraz chodzi.</p><p><code>let yourName;</code> Sprawdzam swoją zmienną za pomocą <code>typeof</code>, czyli<br><code>typeof yourName</code>. Wynikiem jest <code>&quot;undefined&quot;</code>. Jeśli się odwołamy<br>bezpośrednio do zmiennej w konsoli, czyli wpiszemy: <code>yourName;</code> to wynik<br>również wskazuje na <code>undefined</code></p><p>Jedno <code>undefined</code> posiada cudzysłowy a drugie nie w powyższym opisie.<br>Musimy pamiętać, że:</p><p>Operator <code>typeof</code> <em>zawsze</em> zwraca <code>String</code>, ale wartość tego String<br>jest <code>undefined</code>.</p><p>Jeśli utworzymy zmienną, ale nie przypiszemy do niej żadnej wartości,<br>to ma ona wartość <code>undefined</code>: <code>let yourName;</code> - wartość zmiennej to<br><em><code>undefined</code></em></p><p>Jeśli, chcemy <strong>z góry</strong>, aby zadeklarowana zmienna miała wartość pustą<br>to przypiszemy do niej wartość <strong>null</strong>: <code>let yourName = null;</code></p><p>Sprawdźmy jedną rzecz: <code>typeof null</code> - zwróci nam <code>object</code>, ale <strong>STOP</strong></p><p><strong><em>null</em> NIE JEST OBIEKTEM</strong></p><h3 id="Jak-to-ma-sie-do-obiektow"><a href="#Jak-to-ma-sie-do-obiektow" class="headerlink" title="Jak to ma się do obiektów?"></a>Jak to ma się do obiektów?</h3><p><code>let person = {};</code>, sprawdźmy za pomocą <code>typeof person.name</code> =&gt;<br>Wynik to: <code>&quot;undefined&quot;</code></p><p>Dlaczego tak jest?</p><p>Ponieważ próbujemy się odwołać do czegoś, czego nie ma. W tym wypadku<br>próbujemy sie odwołać do właściwości name obiektu person`</p><p>Jeśli chcę, aby ta właściwość była pusta to możemy zrobić to tak:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    name: <span class="literal">null</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Teraz <code>typeof person.name</code> będzie miał wartość <code>object</code>.</p><p>Jeśli wynikiem kiedyś będzie <code>null</code>, to muszę pamiętać, że zmienna<br>została już zadeklarowana, ale nic nie zostało do niej przypisane.<br>Przy <code>undefined</code> wartość nigdy nie została ustawiona.</p><h2 id="Podsumowujac"><a href="#Podsumowujac" class="headerlink" title="Podsumowując"></a>Podsumowując</h2><p>Lekcja ta, też nie była dla mnie skomplikowana. Wydaje mi się, że<br>rozumiem o co w niej chodzi. Wykonałem parę ćwiczeń wraz z<br><strong>Piotr Palarz</strong> i jestem zadowolony :-)</p><p>Jeżeli popełniłem jakieś błędy w opisie lekcji, albo uważacie, że nie<br>bardzo jednak to rozumiem, to proszę  dajcie znać w komentarzach!</p><p><strong><em>Pozdrawiam! :-)</em></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ogólnie rzecz biorąc, zaczynam od początku &lt;strong&gt;JavaScript&lt;/strong&gt;, ale mnóstwo&lt;br&gt;rzeczy wiem - &lt;em&gt;tak czuję, albo wydaję mi się!&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nauka Linux&#39;a od podstaw (2)</title>
    <link href="https://cezarytworzewski.github.io/2018/06/08/podstawy-linux-2/"/>
    <id>https://cezarytworzewski.github.io/2018/06/08/podstawy-linux-2/</id>
    <published>2018-06-07T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.675Z</updated>
    
    <content type="html"><![CDATA[<p>W tym artykule opiszę to czego się nauczyłem, czyli:<br><strong>instalacja oprogramowania</strong>, <strong>dowiązania w Linux</strong>, <strong>mechanizm CRON</strong></p><p>Warto wspomnieć, że instalować paczki <strong>rpm</strong> może jedynie użytkownik z<br>uprawnieniami <strong>roota</strong>!</p><h2 id="Instalacja-oprogramowania"><a href="#Instalacja-oprogramowania" class="headerlink" title="Instalacja oprogramowania"></a>Instalacja oprogramowania</h2><p>Na podstawie systemu CentOS do instalacji oprogramowania służą nam dwa<br>narzędzia:</p><ul><li>narzędzia automatyczne: <strong>yum</strong></li><li>narzędzia do paczek: <strong>rpm</strong></li></ul><p>Instalacja z paczki wygląda następująco:</p><ul><li>musimy pobrać odpowiednią paczkę, która jest zgodna z naszą architekturą OS</li><li>wydajemy polecenie:<ul><li><code>rpm -i teamviewer_linux.rpm</code> albo lepszym rozwiązaniem będzie:<ul><li><code>rpm -Uvh teamviewer_linux.rpm</code> =&gt; gdzie poszczególne parametry<br>  oznaczają:<ul><li><code>U</code> - jest to inaczej polecenie <code>install</code> ale dodatkowo<br>  robi nam <code>update</code> naszej paczki</li><li><code>v</code> - wyświetla nam informacje co aktualnie się wykonuje<br>  podczas instalacji</li><li><code>h</code> - wyświetla nam procentoway pasek postępu</li></ul></li></ul></li></ul></li></ul><p><strong>Instalacja z narzędziem autoomatycznym:</strong><br><code>yum install cups</code> - gdzie <strong>cups</strong> jest to serwer wydruku</p><h2 id="Dowiazania-w-Linux’ie"><a href="#Dowiazania-w-Linux’ie" class="headerlink" title="Dowiązania w Linux’ie"></a>Dowiązania w Linux’ie</h2><ol><li>Wyróżniamy dwa <code>dowiązania</code> w Linux:</li></ol><ul><li><strong>symboliczne</strong></li><li><strong>twarde</strong></li></ul><h3 id="Dowiazanie-symboliczne"><a href="#Dowiazanie-symboliczne" class="headerlink" title="Dowiązanie symboliczne"></a>Dowiązanie symboliczne</h3><ul><li><p>przechodzę do katalogu domowego:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br></pre></td></tr></table></figure></li><li><p>tworzę folder i przechodzę do niego:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir linki</span><br><span class="line"><span class="built_in">cd</span> linki/</span><br></pre></td></tr></table></figure></li><li><p>utworzę sobie plik tekstowy:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim plik.txt</span><br></pre></td></tr></table></figure><p>  uzupełniam go zawartością po czym zapisuję. Więcej o edytorze VIM<br>  znajdziesz <a href="https://www.cezarytworzewski.github.io/blog/2018/06/07/podstawy-linux-1/" target="_blank" rel="noopener">tutaj</a></p></li><li><p>sprawdzam zawartość <code>plik.txt</code>:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat plik.txt</span><br></pre></td></tr></table></figure></li><li><p>teraz chce utworzyć <strong>skrót</strong> do pliku o nazwie <strong>plik.txt</strong>:</p><p>  Tworzę folder <strong>dowiązania</strong> w lokalizacji <strong>tmp</strong>:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /tmp/dowiazania/</span><br><span class="line"><span class="built_in">cd</span> /tmp/dowiazania/</span><br></pre></td></tr></table></figure></li><li><p>teraz tworzę dowiązanie do pliku:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s plik.txt /tmp/dowiazania/</span><br></pre></td></tr></table></figure><p>  Parametr <strong>s</strong> oznacza, że symboliczne.</p></li><li><p>przechodzę do katalogu <strong>dowiazania</strong>:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp/dowiazania/</span><br><span class="line">ls //wyświetlam zawartość folderu **dowiazania**</span><br><span class="line">ls -l</span><br></pre></td></tr></table></figure></li></ul><h3 id="Dowiazania-twarde"><a href="#Dowiazania-twarde" class="headerlink" title="Dowiązania twarde"></a>Dowiązania twarde</h3><p>Jestem w katalogu <strong>linki/</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln bashplik.txt plik2.txt</span><br></pre></td></tr></table></figure><p>Jeśli w poleceniu <code>ln</code> nie damy parametru to zostanie utworzone<br>dowiązanie twarde</p><p>Wyświetlimy sobie katalog:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /linki</span><br><span class="line">ls</span><br><span class="line">ls -l</span><br></pre></td></tr></table></figure><p>Parametr <code>-l</code> wyświetla wszystko - uprawnienia, data,<br>godzina, user. Pierwsza kolumna oznacza uprawnienia do pliku,<br>natomiast druga to cyfra np: <strong>1</strong>, z każdym dowiązaniem twardym<br>liczba będzie rosnąć.</p><h3 id="Uwaga-na-dowiazania"><a href="#Uwaga-na-dowiazania" class="headerlink" title="Uwaga na dowiązania"></a>Uwaga na dowiązania</h3><ul><li><strong>dowiązanie symboliczne</strong> mogę tworzyć na innych partycjach</li><li>Natomiast <strong>dowiązania twarde</strong> musi znajdować się na partycji, w którym<br>  znajduje się oryginalny plik</li></ul><h3 id="Mechanizm-CRON"><a href="#Mechanizm-CRON" class="headerlink" title="Mechanizm CRON"></a>Mechanizm CRON</h3><p><strong>Mechanizm CRON</strong> jest to odpowiednik <strong>Menadżera zadań</strong> w <strong>Windows</strong>.<br>Możemy zdefiniować jakieś zadanie. Zakładam, że nie ma nas przy komputerze<br>a coś musi się wykonać np. jakaś aktualizacja systemu, albo tworzenie<br>automatycznych logów w systemie.</p><p>Mechanizm CRON posiada <strong>7 pozycji:</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * root touch /tmp/plik.txt</span><br></pre></td></tr></table></figure><h3 id="Opis-wiersz-z-definicja-zadania-w-CRON"><a href="#Opis-wiersz-z-definicja-zadania-w-CRON" class="headerlink" title="Opis wiersz z definicją zadania w CRON"></a>Opis wiersz z definicją zadania w CRON</h3><table><thead><tr><th style="text-align:center"><strong>Pozycja</strong></th><th style="text-align:center"><strong>Odpowiednik</strong></th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">minuta</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">godzina</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">miesiąc</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">dzień miesiąca</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">dzień tygodnia</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">użytkownik</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">zadanie do wykonania</td></tr></tbody></table><p>Mechanizmu CRON używa się do uruchamiania zadań (programów, komend,<br>skryptów) o konkretnej godzinie, dniu.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;W tym artykule opiszę to czego się nauczyłem, czyli:&lt;br&gt;&lt;strong&gt;instalacja oprogramowania&lt;/strong&gt;, &lt;strong&gt;dowiązania w Linux&lt;/strong&gt;, 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nauka Linux&#39;a od podstaw (1)</title>
    <link href="https://cezarytworzewski.github.io/2018/06/07/podstawy-linux-1/"/>
    <id>https://cezarytworzewski.github.io/2018/06/07/podstawy-linux-1/</id>
    <published>2018-06-06T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.675Z</updated>
    
    <content type="html"><![CDATA[<p>Jak wiecie, dodatkiem do mojej nauki <code>Front-end&#39;u</code> jest nauka <code>Linux&#39;a</code>.<br>Fizycznie posiadam <code>Ubuntu</code> i na maszynie wirtualnej <code>CentOS</code>.</p><h2 id="Podstawowe-polecenie"><a href="#Podstawowe-polecenie" class="headerlink" title="Podstawowe polecenie"></a>Podstawowe polecenie</h2><ul><li><code>pwd</code> - wskazuje bieżącą lokalizację (ścieżkę) w jakiej się znajdujemy</li><li><code>cd ..</code> - zejście do katalogu wcześniej</li><li><code>cd ../..</code> - przechodzi dwa poziomy do tyłu</li><li><code>clear</code> - czyści nam ekran</li><li><code>whoami</code> - sprawdza nam, kto jest zalogowany aktualnie, jaki user</li></ul><h3 id="W-czym-moze-pomoc-nam-przycisk-na-klawiaturze-TAB"><a href="#W-czym-moze-pomoc-nam-przycisk-na-klawiaturze-TAB" class="headerlink" title="W czym może pomóc nam przycisk na klawiaturze TAB?"></a>W czym może pomóc nam przycisk na klawiaturze <code>TAB</code>?</h3><p>Przycisk ten dopisuje na ‘drugą’ część polecenia! :)</p><h3 id="Co-to-sciezka-bezwzgledna"><a href="#Co-to-sciezka-bezwzgledna" class="headerlink" title="Co to ścieżka bezwzględna?"></a>Co to ścieżka bezwzględna?</h3><p>To jest coś w stylu <code>pwd</code>. Przykład:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/cezary/Dokumenty/</span><br></pre></td></tr></table></figure><p>Czyli jest to cała ścieżka dostępu.</p><h3 id="Co-to-jest-sciezka-wzgledna"><a href="#Co-to-jest-sciezka-wzgledna" class="headerlink" title="Co to jest ścieżka względna?"></a>Co to jest ścieżka względna?</h3><p>W najprostszym dla mnie rozumieniu jest to przechodzenie stopniowe do katalogów,<br>katalog po katalogu. Przykład poniżej:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> home</span><br><span class="line"><span class="built_in">cd</span> cezary</span><br><span class="line"><span class="built_in">cd</span> Dokumenty</span><br></pre></td></tr></table></figure><h3 id="O-nieee-Gdzie-szukac-pomocy-Nie-dziala-mi-to"><a href="#O-nieee-Gdzie-szukac-pomocy-Nie-dziala-mi-to" class="headerlink" title="O nieee! Gdzie szukać pomocy? Nie działa mi to!"></a>O nieee! Gdzie szukać pomocy? Nie działa mi to!</h3><p>Najpopularniejszymi źródłami, z którego możemy czerpać wiedzę i<br>możliwość rozwiązywania problemów jest:</p><ul><li><a href="http://www.linux.pl" target="_blank" rel="noopener">Linux.pl</a></li><li><a href="http://www.forum.linux.pl" target="_blank" rel="noopener">Forum Linuxa</a></li></ul><h2 id="Pliki-i-katalogi"><a href="#Pliki-i-katalogi" class="headerlink" title="Pliki i katalogi"></a>Pliki i katalogi</h2><p><strong>Najpopularniejsze polecenia to:</strong></p><ul><li><code>mkdir</code> - tworzy nam katalog. Przykład: <code>mkdir JavaScript</code></li><li><code>rmdir</code> - usuwa nam plik lub pusty katalog</li><li><code>touch</code> - tworzy nam pliki wszelkiego typu. Pliki tekstowe, pliki<br>  <code>html</code>, <code>css</code> czy nawet pliki <code>js</code>. Możemy tworzyć kilka plików na<br>  raz -&gt; <code>touch plik1.txt plik2.txt index.htmk</code>. Więcej do poczytania<br>  na <a href="https://piecioshka.pl/blog/2018/05/21/jak-stworzyc-3-pliki-o-roznych-rozszerzeniach.html" target="_blank" rel="noopener">Jak stworzyć 3 pliki o różnych rozszerzeniach za pomocą 1 polecenia?</a></li><li><code>rm</code> - usunięcie pliku lib niepustego katalogu. Aby usunąć katalog<br>  wraz z zawartością wywołujemy polecenie <code>rm</code> z parametrem<br>  <code>r</code> –&gt; <code>rm -r Dokumenty</code>.</li><li><code>cp</code> - kopiuje pliki lub katalogi w różne miejsca</li><li><code>mv</code> - przeniesienie pliku lub katalogu (wycinanie). Zmienia też nazwę.</li></ul><h2 id="Kopiowanie"><a href="#Kopiowanie" class="headerlink" title="Kopiowanie"></a>Kopiowanie</h2><p>Tworzę dwa foldery:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir katalog1</span><br><span class="line">mkdir katalog2</span><br></pre></td></tr></table></figure><p>W <code>katalog1</code> tworzę dwa pliki: <code>touch plik1.txt plik2.txt</code>.<br><code>Katalog2</code> pozostaje pusty.</p><ul><li>chce <code>plik1.txt</code> skopiować do <code>katalog2/</code>:<br>  <code>cp katalog1/plik1.txt katalog2</code></li><li>chce <code>plik1.txt</code> skopiować do <code>katalog2/</code>, ale zmienić nazwę tego pliku:<br>  <code>cp katalog1/plik1.txt katalog2/plik3.txt</code></li><li>chce skopiować całą zawartość <code>katalog1</code> do <code>katalog2/</code>:<br>  <code>cp katalog1/* katalog2/</code></li><li>zmiana nazwy i przenoszenie ‘czegoś’ w inne miejsce:<br>  <code>mv katalog1/plik1.txt katalog2/</code> - rezultat będzie taki, że<br>  <code>plik1.txt</code>zostanie przeniesiony (wycięty) z <code>katalog1</code> i będzie<br>  widoczny w <code>katalog2</code></li><li>chce zmienić nazwę pliku w tym samym katalogu:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> katalog1/</span><br><span class="line">mv plik1.txt nowaNazwaPliku.txt</span><br></pre></td></tr></table></figure><h2 id="Edytor-VIM"><a href="#Edytor-VIM" class="headerlink" title="Edytor VIM"></a>Edytor VIM</h2><p>Edytor <code>VIM</code> posiada 3 tryby pracy:</p><ul><li>po wejściu do <code>VIM</code> np.: <code>vim plik1.txt</code> - wtedy mamy <strong>tryb normal</strong></li><li>jeśli kliknę literę <code>a</code> to będę wówczas w <strong>trybie input</strong>, czyli<br>  wprowadzanie, od tej chwili mogę pisać w swoim edytorze kod</li><li>żeby zapisać plik to:<ul><li>najpierw klikam <code>ctrl + c</code></li><li>znak <code>:</code> - czyli dwukropek uruchamia nam trzeci tryb, tzw. <strong>tryb<br>  command-line</strong></li><li>żeby zapisać plik wciskam <code>w</code> (write)</li><li>żeby wyjść z pliku wciskam <code>:q</code> (quit)</li><li>albo od razu <code>:wq</code></li></ul></li></ul><p>Aby wyświetlić całą zawartość pliku w terminalu wywołuję polecenie <code>cat</code>,<br><code>cat plik1.txt</code>.</p><p>Inne potrzebne polecenia w <code>VIM</code> to:</p><ul><li><code>dd</code> - wycina nam daną linię, w której się ustawimy</li><li><code>p</code> - wkleja nam tekst pod tekstem, gdzie obecnie się znajdujemy kursorem</li><li><code>P</code> lub <code>Shift + p</code> - wkleja nam tekst nad tekstem</li></ul><h3 id="Jak-wyszukiwac-dany-tekst-w-edytorze-VIM"><a href="#Jak-wyszukiwac-dany-tekst-w-edytorze-VIM" class="headerlink" title="Jak wyszukiwać dany tekst w edytorze VIM?"></a>Jak wyszukiwać dany tekst w <code>edytorze VIM</code>?</h3><p>Jeśli chcemy wyszukać np. <code>pająk</code> tzn. słowo w tekście to robimy <code>/pająk</code>.<br>Wyszukają nam się wyrazy o tej wartości w całym naszym pliku.</p><h3 id="Jak-zmienic-slowo-w-VIM"><a href="#Jak-zmienic-slowo-w-VIM" class="headerlink" title="Jak zmienić słowo w VIM?"></a>Jak zmienić słowo w <code>VIM</code>?</h3><p>Jeśli chce zmienić wszystkie słowa<code>pająk</code> na <code>kot</code> to uruchamiam:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/pająk/kot</span><br></pre></td></tr></table></figure><p>W kolejnych wpisach o Linuxie dowiem się jak instalować rzeczy.<br>Oczywiście z poziomu <code>TERMINALA</code></p><p>Zapraszam do czytania i komentowania! :)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Jak wiecie, dodatkiem do mojej nauki &lt;code&gt;Front-end&amp;#39;u&lt;/code&gt; jest nauka &lt;code&gt;Linux&amp;#39;a&lt;/code&gt;.&lt;br&gt;Fizycznie posiadam &lt;code&gt;Ubuntu
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nauka JavaScript od podstaw (1)</title>
    <link href="https://cezarytworzewski.github.io/2018/06/05/podstawy-js-1/"/>
    <id>https://cezarytworzewski.github.io/2018/06/05/podstawy-js-1/</id>
    <published>2018-06-04T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.671Z</updated>
    
    <content type="html"><![CDATA[<p>Małe opóźnienie z wpisem na blogu, ale z braku czasu nie dałem rady.<br>Przepraszam za opóźnienia! :)</p><p>Jak wiecie zacząłem naukę ‘czystego’ <code>JavaScript-u</code>. Jak przebiegał<br>powtórny etap tejże nauki?</p><h2 id="Co-to-jest-JavaScript"><a href="#Co-to-jest-JavaScript" class="headerlink" title="Co to jest JavaScript?"></a>Co to jest JavaScript?</h2><p><code>JavaScript</code> to interpretowany, skryptowy język programowania.</p><p>Co to oznacza, że <code>interpretowany</code>? <em>INTERPRETOWANY</em> ponieważ plik,<br>który nie jest kompilowany, jedynie zostanie  zinterpretowany przez<br>program np. przez przeglądarkę i zostanie on wykonany jako np. odtwarzacz<br>video albo galeria zdjęć.</p><h2 id="Co-mozemy-stworzyc-za-pomoca-JavaScriptu"><a href="#Co-mozemy-stworzyc-za-pomoca-JavaScriptu" class="headerlink" title="Co możemy stworzyć za pomocą JavaScriptu"></a>Co możemy stworzyć za pomocą JavaScriptu</h2><ul><li>odtwarzacz video</li><li>kalkulator</li><li>chat</li><li>gry</li><li>edytory tekstu</li></ul><h2 id="Jak-zlapac-kontekst-uzycia-JavaScriptu-na-stronie"><a href="#Jak-zlapac-kontekst-uzycia-JavaScriptu-na-stronie" class="headerlink" title="Jak złapać kontekst użycia JavaScriptu na stronie?"></a>Jak złapać kontekst użycia JavaScriptu na stronie?</h2><p>Rozumiem to tak. Załóżmy, że posiadamy miniaturkę zdjęcia z wakacji.<br>Jeśli najadę na zdjęcie myszką, i ustawie <code>hover</code> w stylach <code>CSS</code> to<br>zdjęcie mi sie podświetli. Analogia do JavaScriptu, to taka według mnie,<br>że jeśli najedziemy myszką na zdjęcie, następnie klikniemy, to wywołamy<br><code>zdarzenie</code>, które np. będzie polegało na wyświetleniu dużego zdjęcia<br>obok miniatury.</p><h2 id="JQuery-JavaScript"><a href="#JQuery-JavaScript" class="headerlink" title="JQuery =! JavaScript ?"></a>JQuery <code>=!</code> JavaScript ?</h2><p>jQuery to inaczej zbiór funkcji napisanych w czystym JavaScript. Dzięki<br>jQuery możemy manipulować drzewem DOM.</p><p>Osobiście spotkałem się z innymi opiniami na ten temat. Sporo osób mi<br>mówiło</p><blockquote><p>Czarek, zacznij od jQuery</p></blockquote><p> inni zaś</p><blockquote><p>Czarek, zacznij od czystego<br>JavaScript, bo to podstawa do zrozumienia wszystkich innych framework’ów`.</p></blockquote><p>Przez to wszystko do tej pory mam jeden wielki mętlik w głowie…<br>Patrząc z perspektywy problemu w zrozumieniu i pojęciu JavaScript-u,<br>może ma to sens? Jak myślicie?</p><p>Dajcie znać o swoich opiniach na ten temat! :-)</p><h2 id="JavaScript-poza-przegladarka"><a href="#JavaScript-poza-przegladarka" class="headerlink" title="JavaScript poza przeglądarką?"></a>JavaScript poza przeglądarką?</h2><ul><li><code>Node.js</code> (programy napisane w nim to np. <code>Gulp</code>, <code>Grunt</code>, <code>Yeoman</code></li><li><code>MongoDB</code> - zapytania w tej bazie wypisujemy za pomocą poleceń JavaScript.</li><li><code>Adobe Photoshop</code> - oznacza to, że rozszerzenia do programu zostały<br>  napisane właęnie w JavaScript. Przykładem będzie <code>plugin</code><br>  <a href="https://twitter.com/piecioshka" target="_blank" rel="noopener">Piotra Kowalskiego</a>) o nazwie<br>  <a href="https://github.com/piecioshka/photoshop-plugin-copy-color-after-picking" target="_blank" rel="noopener"><em><code>Photoshop Plugin Copy Color After Picking</code></em></a></li></ul><h2 id="Gdzie-umieszczac-skrypty-JavaScript"><a href="#Gdzie-umieszczac-skrypty-JavaScript" class="headerlink" title="Gdzie umieszczać skrypty JavaScript?"></a>Gdzie umieszczać skrypty JavaScript?</h2><ul><li><p>możemy je umieszczać w elemencie <code>head</code>:</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    alert('Witaj, Cezary!');</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  Powyższy sposób nie powinien być praktykowany, ponieważ podczas otwarcia<br>  strony internetowej, pierw wczyta nam się skrypt, a nie reszta strony w<br>  postaci tekstu, obrazków.</p></li><li><p>albo będziemy umieszczać w dowolnym miejscu w <code>body</code>, czyli tak zwane<br>  podlinkowanie skryptu:</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"scripts/main.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>Dobrą praktyką jest umieszczanie skryptów na końcu, najlepiej przed<br>zamykającym znacznikiem <code>body</code>, czyli <code>&lt;/body&gt;</code></p><p>Dlaczego?</p><p>Jeśli umieścimy go w <code>head</code> to skrypt sie wykonana, a póki co strona www<br>nie zostanie wczytana, wykona się później. Obejściem na to może być<br>dodanie atrybutu <code>async</code>, które opóźnia proces interpretowania kodu.</p><h2 id="No-wiec-czym-jest-ZMIENNA"><a href="#No-wiec-czym-jest-ZMIENNA" class="headerlink" title="No więc czym jest ZMIENNA?"></a>No więc czym jest <code>ZMIENNA</code>?</h2><p>Zmienne są to podstawowe konstrukcje języka JavaScript - ABSOLUTNA PODSTAWA!</p><p>Deklarowanie zmiennej wygląda następująco:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> imie = <span class="string">'Cezary'</span>;</span><br></pre></td></tr></table></figure><ul><li><code>var</code> - to słowo kluczowe języka JavaScript</li><li><code>imie</code> - to nazwa zmiennej</li><li><code>=</code> - jest to znak przypisania zmiennej</li><li><code>Cezary</code> - jest to wartość mojej zmiennej</li></ul><p>Innym sposobem deklaracji zmiennej jest:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> imie = <span class="string">'Cezary'</span>,</span><br><span class="line">    nazwisko = <span class="string">'Tworzewski'</span>;</span><br></pre></td></tr></table></figure><h2 id="Gdzie-jest-zapisywana-wartosc-zmiennej"><a href="#Gdzie-jest-zapisywana-wartosc-zmiennej" class="headerlink" title="Gdzie jest zapisywana wartość zmiennej?"></a>Gdzie jest zapisywana wartość zmiennej?</h2><p>Wszystkie zmienne zostają zapisane w pamięci <code>RAM - Random Access Memory</code></p><h2 id="Co-moga-przechowywac-zmienne"><a href="#Co-moga-przechowywac-zmienne" class="headerlink" title="Co mogą przechowywać zmienne?"></a>Co mogą przechowywać zmienne?</h2><ul><li>wartości prymitywne (np. ciąg znaków)</li><li>referencje do obiektów (np. Date)</li><li>referencje do funkcji</li></ul><p>Ta lekcja minęła dość łatwo, wszystko z niej rozumiem do tej pory.<br>Nie miałem żadnych trudności z poruszanymi zagadnieniami do tej pory.<br>Bardzo możliwie, że dlatego, że nie raz uczyłem się tego - jest to dla<br>mnie zrozumiałe.<br>Te początkowe lekcje chciałbym przerobić w miarę szybko, ale nie za szybko.<br>Nie chciałbym pominąć żadnych ważnych kwestii, które porusza autor kursu.</p><p>Może kiedyś coś pominąłem, coś bardzo prostego? Może dlatego mam problem?<br>Sam nie wiem. Nie jest to czas ani miejsce, żeby się rozwodzić nad tym<br>tematem. Szukam jakiegoś ratunku już dla siebie.</p><p>Wiem jedno - muszę baaaardzo dużo pracować / uczyć się!</p><p>Blogowanie dopiero zaczynam więc… bardzo dziękuje za doczytanie mnie do końca!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Małe opóźnienie z wpisem na blogu, ale z braku czasu nie dałem rady.&lt;br&gt;Przepraszam za opóźnienia! :)&lt;/p&gt;
&lt;p&gt;Jak wiecie zacząłem naukę ‘c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jutro startuję z JavaScript od nowa!</title>
    <link href="https://cezarytworzewski.github.io/2018/06/03/javascript-od-nowa/"/>
    <id>https://cezarytworzewski.github.io/2018/06/03/javascript-od-nowa/</id>
    <published>2018-06-02T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.671Z</updated>
    
    <content type="html"><![CDATA[<p>Otóż, jak wiecie mam cholerny problem ze zrozumieniem… dobra nie będę<br>owijał w bawełnę.</p><p>Jutro startuję w kursem <a href="https://eduweb.pl/kursy/javascript/javascript-podstawy.html" target="_blank" rel="noopener">JavaScript - od Podstaw</a><br>serwisu <a href="http://www.eduweb.pl" target="_blank" rel="noopener">Eduweb.pl</a>, którego autorem jest <code>Piotr Palarz</code>.<br>Kurs trwa około 11 godzin, ale dla mnie potrzeba chyba 10 000 godzin na<br>przerobienie. Oczywiście żartuję…</p><p>Przerobienie kursu nie jest żadnym problemem dla mnie - problemem jest to,<br>żebym go w pełni zrozumiał.</p><p>Kiedyś przerabiałem podobne kursy <code>JavaScript</code>.</p><p><img src="https://avatars0.githubusercontent.com/u/30724303?s=400&amp;v=4" alt="df"></p><h2 id="Plan-jest-taki"><a href="#Plan-jest-taki" class="headerlink" title="Plan jest taki"></a>Plan jest taki</h2><ul><li>oglądam daną lekcję z kursu na jednym monitorze,</li><li>na drugim monitorze w tym samym czasie -równolegle koduję; czyli<br>  przepisuje kod razem z <code>Piotr Palarz</code> :)</li><li>dane zagadnienie notuję w moim <em>NOTATNIKU</em>. Będę notował takie<br>  zagadnienia jak co to: <code>zmienna</code>, <code>pętla</code>, <code>intrukcja warunkowa</code>, co<br>  to <code>obiekt</code> i <code>metoda</code>.</li></ul><p>Chociaż te terminy przewijają mi się od kilku lat, to wiem co oznaczają,<br>do czego się stosuje. Ale brak mi umiejętności wykorzystania ich w praktyce.</p><p>Więc, jeśli macie jakieś rady, podzielcie się ze mną, jak powinienem<br>podejść do tego tematu!</p><p>Jutro podzielę się z Wami jak minął mi pierwszy dzień kursu! Opiszę swoje<br><em><code>porażki</code></em> i <em><code>sukcesy</code></em> z pierwszego dnia!</p><p><em>Pozdrowienia dla wojowników <code>Ninja JS</code>!</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Otóż, jak wiecie mam cholerny problem ze zrozumieniem… dobra nie będę&lt;br&gt;owijał w bawełnę.&lt;/p&gt;
&lt;p&gt;Jutro startuję w kursem &lt;a href=&quot;https:
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Co dalej? Jakie mam plany? Programowanie? JavaScript? Linux?</title>
    <link href="https://cezarytworzewski.github.io/2018/06/02/co-dalej-z-moim-marzeniem/"/>
    <id>https://cezarytworzewski.github.io/2018/06/02/co-dalej-z-moim-marzeniem/</id>
    <published>2018-06-01T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.671Z</updated>
    
    <content type="html"><![CDATA[<p>Ostatnio kupiłem sobie napój firmy <code>OSHEE</code>. Spodobał mi się cytat z<br>butelki <em>“Ograniczenia istnieją tylko w głowie”</em>. Pierwsze skojarzenie<br>jakie wpadło mi do głowy to: <code>programista Front-end</code> i <code>JavaScript</code>.<br>Brzmi motywująco i pozytywnie. Na mojej twarzy poczułem zadowolenie ale<br>tylko przez chwile… bo od razu przypomniałem sobie ile to już miesięcy<br>próbuje się tego nauczyć - co mi niestety nie wychodzi. :-(</p><p>Mimo tylu porażek i niepowodzeń nie poddaję się!<br>W najbliższym czasie postanowiłem wzmożyć naukę programowania.<br>Uściślając, jak wiecie chce zostać <code>Front-end developerem</code> dlatego około<br>w połowie czerwca razem z kolegą panuję zacząć kilkudniowe - intensywne<br>szkolenie, które przybliży mnie do zostania <strong>ekspertem</strong> <code>Front-end</code> lub<br><code>JavaScript</code>.</p><p>Sam nie wiem jak to wyjdzie wszystko. Nie wiem czy to zrozumiem - ale<br>się nie poddaję i nie poddam. To jest moje marzenie do którego dążę.</p><p>Chciałbym widzieć jakiś efekt. Zobaczyć, że zaczynam myśleć jako<br>programista. Zobaczyć, że coś zaczyna mi w końcu wychodzić. To na pewno<br>by zadziałało ze zdwojoną siłą. Więc w najbliższym czasie więcej <code>JS</code>.</p><p>Dużo osób mówi, że najlepiej uczyć się na błędach. Tylko, że JA nie<br>potrafię. Nie umiem wyciągnąć wniosków dlaczego nie umiem tego zrozumieć.</p><p><img src="http://campusnooz.com/cunooz/wp-content/uploads/sites/4/2016/07/dickwad.jpg" alt=""></p><p>Co więcej u mnie? Cały czas też chce poznawać lepiej Linuxa, tak żeby<br>pracować na nim…. może do końca życia? Chyba, że w drogę wejdzie mi<br><code>MacBook</code> firmy <code>Apple</code> - słyszałem o nim pozytywne opinie.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ostatnio kupiłem sobie napój firmy &lt;code&gt;OSHEE&lt;/code&gt;. Spodobał mi się cytat z&lt;br&gt;butelki &lt;em&gt;“Ograniczenia istnieją tylko w głowie”&lt;/em&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux vs. Windows dla Front-end&#39;owca?</title>
    <link href="https://cezarytworzewski.github.io/2018/06/01/linux-vs-windows/"/>
    <id>https://cezarytworzewski.github.io/2018/06/01/linux-vs-windows/</id>
    <published>2018-05-31T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.671Z</updated>
    
    <content type="html"><![CDATA[<p>Około 3 tygodnie temu zdecydowałem. To już KONIEC. Tak, koniec, ale<br>pracy na Windows’ie. Zainstalowałem <code>Ubuntu</code>. System, który moim zdaniem<br>każdy specjalista z branży IT powinien znać.</p><p>Więc zaczynam programować na <code>Linux&#39;ie</code>. Poznaje jego mechanizmy,<br>instalacje programów z <code>paczek</code> i <code>repozytoriów</code>. Dodawanie użytkowników,<br>zmiana haseł, nadawanie uprawnień <code>chmod</code>. Albo jak wyszukiwać pliki lub<br>foldery za pomocą polecenia <code>find</code>.</p><p>Wszystko staram się robić za pomocą <code>TERMINALA</code>.</p><p>W terminalu oczywiście pracuję z <code>Git&#39;em</code> - gdzie jest to niezbędnik<br>każdego programisty <code>Front-end</code> i <code>Back-end</code> Zacząłem pracować z edytorem<br><code>VIM</code> - który około 3 miesiące wcześniej chwilkę pracowałem na Windows -<br>było to zupełnie dla mnie nie zrozumiałe. Teraz jest mały progress.<br>Ogólnie jest mi trochę ciężko jeszcze pracować na Linux’ie, bo całe życie<br>pracowałem na systemie z rodziny <code>Windows</code>.<br>W porównaniu z <code>Windows&#39;em</code> zauważyłem, że moje <code>Ubuntu</code> uruchamia się<br>zdecydowanie szybciej. Na pewno plusem jest, że posiadam dysk SSD.</p><p>Jak na razie myslę, że największa trudność sprawia mi nadawanie wyżej<br>wspomnianych uprawnień <code>chmod</code>. Nauczyłem się na razie podstaw<br>programowania w <code>BASH</code>. Niestety nauka w tym idzie mi kiepsko - jak całe<br>programowanie dotychczas.</p><p>Na systemie Ubuntu mam zainstalowanego <code>VirtualBox&#39;a</code>, a na nim inna<br>dystrybucja <code>CentOS v6.9</code>, gdzie na niej też w wolnych chwilach pogłębiam<br>swoją wiedzę.</p><p>Ostatnio uczyłem się z pomocą <code>CentOS</code> co to jest <code>macierz RAID</code>.<br>Mimo, że skończyłem Informatykę, to teraz zrozumiałem co to jest, po co<br>się stosuje i jaka jest różnica pomiędzy <code>RAID 0</code> i <code>RAID 1</code>. Ogólnie<br>proces tworzenia macierzy jest dla mnie zrozumiały z pomocą <code>VirtualBox</code>.<br>Nie wiem jakby to było jakbym musiał na prawdę zrobić je fizycznie.<br>Może kiedyś to zrobię.</p><p>Oczywiście na Ubuntu mam potrzebne mi oprogramowania tj.: <code>Git</code> i<br><code>WebStorm</code>. Co do edytora <code>WebStorm</code> to przed zmianą systemu z Windows<br>na Linux. Sprawdzałem czy <code>WebStorm</code> jest dostępny na Linuxa. I wtedy<br>podjąłem tą decyzję.</p><p>Na szczęście nie gram w gry - bo wtedy chyba bez Windowsa by się nie obyło.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Około 3 tygodnie temu zdecydowałem. To już KONIEC. Tak, koniec, ale&lt;br&gt;pracy na Windows’ie. Zainstalowałem &lt;code&gt;Ubuntu&lt;/code&gt;. System, k
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Czym jest Git? Klucze SSH - jak to zrozumieć?</title>
    <link href="https://cezarytworzewski.github.io/2018/05/31/git-ssh/"/>
    <id>https://cezarytworzewski.github.io/2018/05/31/git-ssh/</id>
    <published>2018-05-30T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.671Z</updated>
    
    <content type="html"><![CDATA[<p>Drugi post postanowiłem, że będzie poświęcony konfiguracji <code>Git&#39;a</code> krok<br>po kroku.</p><p>Sam wiele razy miałem sytuację, że posypały mi się <code>klucze SSH</code> w <code>Git</code><br>lub występowały inne błędy. Postanowiłem napisać wszystko kroku po kroku,<br>bynajmniej mam taką nadzieję, żebym na przyszłość nie musiał szukać,<br>męczyć się jak to skonfigurować. Wszystko będę miał w jednym miejscu.<br>Mam również nadzieję, że spodoba Wam się mój wpis, mój blog i będzie dla<br>Was pożyteczny.</p><p>Myślę, że w ten sposób będę mógł usystematyzować swoją wiedzę.</p><h2 id="W-skrocie-czym-jest-Git"><a href="#W-skrocie-czym-jest-Git" class="headerlink" title="W skrócie, czym jest Git?"></a>W skrócie, czym jest <code>Git</code>?</h2><ul><li>to system kontroli wersji</li><li>system kontroli wersji śledzi wszystkie zmiany jakie zostały dokonane<br>  na pliku, plikach, bądź całym katalogu</li><li>umożliwia przywrócenie wcześniejszej wersji projektu</li></ul><h2 id="Jak-skonfigurowac-Git’a-z-GitHub’em"><a href="#Jak-skonfigurowac-Git’a-z-GitHub’em" class="headerlink" title="Jak skonfigurować Git’a z GitHub’em?"></a>Jak skonfigurować Git’a z GitHub’em?</h2><ol><li><p>Jeśli nie posiadamy konta na <code>GitHub</code> musimy je założyć.<br>Tutaj założymy konto: <a href="https://github.com/join?source=header-home" target="_blank" rel="noopener">https://github.com/join?source=header-home</a></p><p> Jeśli posiadamy konto to wszystko jak na razie jest dobrze. :-)</p></li><li><p>Na komputerze lokalnym tworzę folder o nazwie np.: <code>Pliki</code> oraz tworzę<br> plik <code>index.html</code> dalej… muszę połączyć <code>git</code>-a lokalnie z kontem<br> <code>GitHub</code> na serwerze:</p></li></ol><ul><li><p>tworzę parę kluczy SSH (publiczny i prywatny), wykonując polecenie:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;adres-email&quot;</span><br></pre></td></tr></table></figure></li><li><p>następnie, muszę przejść do katalogu użytkownika <code>~/.ssh</code>.</p><p>  Z poziomu terminala do katalogu użytkownika przechodzimy za pomocą<br>  polecenia <code>cd ~</code> - znak TYLDA. Są tam dwa pliki, interesuje mnie<br>  plik o nazwie: <code>id_rsa.pub</code> –&gt; wchodzę do niego i kopiuję całą jego<br>  zawartość.</p><p>  Zawartość pliku <code>id_rsa.pub</code> jest moim kluczem publiczny, którą to<br>  wklejam na koncie <code>GitHub</code> w zakładce <code>Settings</code> –&gt; <code>SSH and GPG keys</code>.</p></li><li><p>następnie w konsoli wydaję polecenie:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br></pre></td></tr></table></figure><p>  znak <code>.</code> - kropka oznacza, że chce dodać wszystkie pliki. Jeśli chciałbym<br>  dodać tylko jeden plik to wydam polecenie: <code>git add index.html</code>, gdzie<br>  plik <code>index.html</code> jest moim plikiem, który chce wysłać na serwer.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git status (opcjonalnie)</span><br><span class="line">git commit -m <span class="string">"commit-message"</span></span><br><span class="line">git remote add origin git@github.com:NAZWA_UŻYTKOWNIKA_GITHUB/NAZWA_REPOZYTORIUM.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></li></ul><p>Pliki powinny być już dostępne w projekcie na <a href="http://www.github.com" target="_blank" rel="noopener">GitHub</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Drugi post postanowiłem, że będzie poświęcony konfiguracji &lt;code&gt;Git&amp;#39;a&lt;/code&gt; krok&lt;br&gt;po kroku.&lt;/p&gt;
&lt;p&gt;Sam wiele razy miałem sytuację
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Kim jestem? O czym będzie mój blog?</title>
    <link href="https://cezarytworzewski.github.io/2018/05/30/omnie/"/>
    <id>https://cezarytworzewski.github.io/2018/05/30/omnie/</id>
    <published>2018-05-29T22:00:00.000Z</published>
    <updated>2018-06-17T08:55:32.671Z</updated>
    
    <content type="html"><![CDATA[<p>Witam wszystkich <code>FRONT-ów</code> :-)</p><p>Mam na imię Cezary. Pochodzę z małej wsi koło Opatowa (woj. świętokrzyskie),<br>ale obecnie mieszkam w Kielcach.</p><p>Z zawodu? To skomplikowane. Ukończyłem studia inżynierskie na kierunku<br>INFORMATYKA na UJK Kielce. Natomiast pracuję jako ratownik wodny na jednym z<br>Kieleckich basenów.</p><p>Chce zostać PROGRAMISTĄ, a dokładniej FRONT-END DEVELOPEREM. Miewam<br>mnóstwo porażek w zdobywaniu odpowiednich szczebli w tej dziedzinie,<br>ale się nie poddaję.</p><p>Moją <code>piętą Achillesową</code> jest zdecydowanie <code>must have</code> każdego<br>programisty, czyli <code>JavaScript</code>. Wierzę, a raczej jestem pewny, że<br>prędzej czy później uda mi się osiągnąć mój cel.</p><p>Na stworzenie bloga, namówił mnie kolega - programista Piotr Kowalski <a href="https://piecioshka.pl/" target="_blank" rel="noopener">https://piecioshka.pl/</a></p><p><mark>Ten blog powstał, chyba dopiero za 4-krotnym konfigurowaniu HEXO.</mark></p><pre><code>_Do zobaczenia_</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Witam wszystkich &lt;code&gt;FRONT-ów&lt;/code&gt; :-)&lt;/p&gt;
&lt;p&gt;Mam na imię Cezary. Pochodzę z małej wsi koło Opatowa (woj. świętokrzyskie),&lt;br&gt;ale obe
      
    
    </summary>
    
    
  </entry>
  
</feed>
